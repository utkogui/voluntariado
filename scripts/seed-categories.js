const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

const categories = [
  // Educa√ß√£o
  {
    name: 'Educa√ß√£o',
    description: 'Oportunidades relacionadas ao ensino, alfabetiza√ß√£o e desenvolvimento educacional',
    icon: 'üéì',
    color: '#3498db'
  },
  {
    name: 'Alfabetiza√ß√£o',
    description: 'Projetos de alfabetiza√ß√£o para crian√ßas e adultos',
    icon: 'üìö',
    color: '#2ecc71'
  },
  {
    name: 'Apoio Escolar',
    description: 'Refor√ßo escolar e atividades educativas complementares',
    icon: '‚úèÔ∏è',
    color: '#f39c12'
  },
  {
    name: 'Educa√ß√£o Especial',
    description: 'Atendimento educacional especializado',
    icon: '‚ôø',
    color: '#9b59b6'
  },

  // Sa√∫de
  {
    name: 'Sa√∫de',
    description: 'Oportunidades na √°rea da sa√∫de e bem-estar',
    icon: 'üè•',
    color: '#e74c3c'
  },
  {
    name: 'Sa√∫de Mental',
    description: 'Apoio psicol√≥gico e sa√∫de mental',
    icon: 'üß†',
    color: '#e67e22'
  },
  {
    name: 'Preven√ß√£o',
    description: 'Campanhas de preven√ß√£o e conscientiza√ß√£o',
    icon: 'üõ°Ô∏è',
    color: '#1abc9c'
  },
  {
    name: 'Cuidados Paliativos',
    description: 'Apoio a pacientes em cuidados paliativos',
    icon: 'ü§ù',
    color: '#34495e'
  },

  // Meio Ambiente
  {
    name: 'Meio Ambiente',
    description: 'Projetos de preserva√ß√£o e sustentabilidade ambiental',
    icon: 'üå±',
    color: '#27ae60'
  },
  {
    name: 'Reciclagem',
    description: 'Projetos de reciclagem e gest√£o de res√≠duos',
    icon: '‚ôªÔ∏è',
    color: '#16a085'
  },
  {
    name: 'Reflorestamento',
    description: 'Plantio de √°rvores e recupera√ß√£o de √°reas degradadas',
    icon: 'üå≥',
    color: '#2ecc71'
  },
  {
    name: 'Conserva√ß√£o',
    description: 'Conserva√ß√£o de esp√©cies e habitats naturais',
    icon: 'ü¶ã',
    color: '#8e44ad'
  },

  // Assist√™ncia Social
  {
    name: 'Assist√™ncia Social',
    description: 'Apoio a pessoas em situa√ß√£o de vulnerabilidade social',
    icon: 'ü§ù',
    color: '#e67e22'
  },
  {
    name: 'Combate √† Fome',
    description: 'Distribui√ß√£o de alimentos e combate √† fome',
    icon: 'üçΩÔ∏è',
    color: '#d35400'
  },
  {
    name: 'Abrigo',
    description: 'Apoio a pessoas em situa√ß√£o de rua',
    icon: 'üè†',
    color: '#95a5a6'
  },
  {
    name: 'Idosos',
    description: 'Atendimento e cuidado com idosos',
    icon: 'üë¥',
    color: '#f39c12'
  },
  {
    name: 'Crian√ßas e Adolescentes',
    description: 'Projetos voltados para crian√ßas e adolescentes',
    icon: 'üë∂',
    color: '#e91e63'
  },

  // Cultura e Arte
  {
    name: 'Cultura',
    description: 'Projetos culturais e art√≠sticos',
    icon: 'üé≠',
    color: '#9b59b6'
  },
  {
    name: 'M√∫sica',
    description: 'Projetos musicais e educa√ß√£o musical',
    icon: 'üéµ',
    color: '#8e44ad'
  },
  {
    name: 'Arte',
    description: 'Projetos de artes visuais e pl√°sticas',
    icon: 'üé®',
    color: '#e74c3c'
  },
  {
    name: 'Teatro',
    description: 'Projetos teatrais e dramaturgia',
    icon: 'üé™',
    color: '#f39c12'
  },

  // Esporte
  {
    name: 'Esporte',
    description: 'Projetos esportivos e atividades f√≠sicas',
    icon: '‚öΩ',
    color: '#27ae60'
  },
  {
    name: 'Futebol',
    description: 'Projetos de futebol e esportes coletivos',
    icon: '‚öΩ',
    color: '#2ecc71'
  },
  {
    name: 'Artes Marciais',
    description: 'Projetos de artes marciais e defesa pessoal',
    icon: 'ü•ã',
    color: '#34495e'
  },
  {
    name: 'Nata√ß√£o',
    description: 'Projetos de nata√ß√£o e esportes aqu√°ticos',
    icon: 'üèä',
    color: '#3498db'
  },

  // Tecnologia
  {
    name: 'Tecnologia',
    description: 'Projetos de inclus√£o digital e tecnologia',
    icon: 'üíª',
    color: '#3498db'
  },
  {
    name: 'Programa√ß√£o',
    description: 'Ensino de programa√ß√£o e desenvolvimento',
    icon: 'üë®‚Äçüíª',
    color: '#2c3e50'
  },
  {
    name: 'Inclus√£o Digital',
    description: 'Projetos de inclus√£o digital para idosos',
    icon: 'üì±',
    color: '#7f8c8d'
  },

  // Direitos Humanos
  {
    name: 'Direitos Humanos',
    description: 'Defesa e promo√ß√£o dos direitos humanos',
    icon: '‚öñÔ∏è',
    color: '#e74c3c'
  },
  {
    name: 'Igualdade de G√™nero',
    description: 'Projetos de igualdade de g√™nero',
    icon: 'üë•',
    color: '#e91e63'
  },
  {
    name: 'Racial',
    description: 'Combate ao racismo e promo√ß√£o da igualdade racial',
    icon: '‚úä',
    color: '#2c3e50'
  },
  {
    name: 'LGBTQIA+',
    description: 'Apoio √† comunidade LGBTQIA+',
    icon: 'üè≥Ô∏è‚Äçüåà',
    color: '#9b59b6'
  },

  // Emerg√™ncia e Desastres
  {
    name: 'Emerg√™ncia',
    description: 'Apoio em situa√ß√µes de emerg√™ncia e desastres',
    icon: 'üö®',
    color: '#e74c3c'
  },
  {
    name: 'Defesa Civil',
    description: 'Apoio √† defesa civil e prote√ß√£o comunit√°ria',
    icon: 'üõ°Ô∏è',
    color: '#f39c12'
  },

  // Animais
  {
    name: 'Prote√ß√£o Animal',
    description: 'Cuidado e prote√ß√£o de animais',
    icon: 'üêï',
    color: '#e67e22'
  },
  {
    name: 'Resgate Animal',
    description: 'Resgate e cuidado de animais abandonados',
    icon: 'üê±',
    color: '#f39c12'
  },

  // Voluntariado Corporativo
  {
    name: 'Voluntariado Corporativo',
    description: 'Projetos de voluntariado empresarial',
    icon: 'üè¢',
    color: '#34495e'
  },
  {
    name: 'Responsabilidade Social',
    description: 'Projetos de responsabilidade social empresarial',
    icon: 'ü§ù',
    color: '#2c3e50'
  }
];

async function seedCategories() {
  try {
    console.log('üå± Iniciando seed das categorias...');

    // Verificar se j√° existem categorias
    const existingCategories = await prisma.category.count();
    if (existingCategories > 0) {
      console.log('‚ö†Ô∏è  Categorias j√° existem no banco. Pulando seed.');
      return;
    }

    // Criar categorias
    for (const category of categories) {
      await prisma.category.create({
        data: category
      });
      console.log(`‚úÖ Categoria criada: ${category.name}`);
    }

    console.log(`üéâ Seed conclu√≠do! ${categories.length} categorias criadas.`);

  } catch (error) {
    console.error('‚ùå Erro no seed das categorias:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// Executar se chamado diretamente
if (require.main === module) {
  seedCategories();
}

module.exports = { seedCategories, categories };


