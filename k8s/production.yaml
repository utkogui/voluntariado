apiVersion: v1
kind: ConfigMap
metadata:
  name: volunteer-app-config
  namespace: production
data:
  NODE_ENV: "production"
  PORT: "3000"
  DATABASE_URL: "postgresql://volunteer_user:secure_password@postgres-service:5432/volunteer_app_prod"
  REDIS_URL: "redis://redis-service:6379"
  JWT_SECRET: "super_secure_jwt_secret_for_production_minimum_32_chars"
  LOG_LEVEL: "info"
  LOG_FORMAT: "json"
---
apiVersion: v1
kind: Secret
metadata:
  name: volunteer-app-secrets
  namespace: production
type: Opaque
data:
  DATABASE_PASSWORD: c2VjdXJlX3Byb2R1Y3Rpb25fcGFzc3dvcmQ= # base64 encoded
  JWT_SECRET: c3VwZXJfc2VjdXJlX2p3dF9zZWNyZXRfZm9yX3Byb2R1Y3Rpb25fbWluaW11bV8zMl9jaGFycw== # base64 encoded
  REDIS_PASSWORD: cmVkaXNfcHJvZHVjdGlvbl9wYXNzd29yZA== # base64 encoded
  EMAIL_API_KEY: U0cueW91cl9zZW5kZ3JpZF9hcGlfa2V5 # base64 encoded
  STRIPE_SECRET_KEY: c2tfbGl2ZV95b3VyX3N0cmlwZV9zZWNyZXRfa2V5 # base64 encoded
  AWS_ACCESS_KEY_ID: eW91cl9hd3NfYWNjZXNzX2tleV9pZA== # base64 encoded
  AWS_SECRET_ACCESS_KEY: eW91cl9hd3Nfc2VjcmV0X2FjY2Vzc19rZXk= # base64 encoded
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: volunteer-app
  namespace: production
  labels:
    app: volunteer-app
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: volunteer-app
  template:
    metadata:
      labels:
        app: volunteer-app
        version: v1
    spec:
      containers:
      - name: volunteer-app
        image: ghcr.io/utkogui/voluntariado:latest
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: volunteer-app-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: volunteer-app-config
              key: PORT
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: volunteer-app-config
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: volunteer-app-config
              key: REDIS_URL
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: volunteer-app-secrets
              key: JWT_SECRET
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: volunteer-app-secrets
              key: DATABASE_PASSWORD
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: volunteer-app-secrets
              key: REDIS_PASSWORD
        - name: EMAIL_API_KEY
          valueFrom:
            secretKeyRef:
              name: volunteer-app-secrets
              key: EMAIL_API_KEY
        - name: STRIPE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: volunteer-app-secrets
              key: STRIPE_SECRET_KEY
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: volunteer-app-secrets
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: volunteer-app-secrets
              key: AWS_SECRET_ACCESS_KEY
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: volunteer-app-service
  namespace: production
  labels:
    app: volunteer-app
spec:
  selector:
    app: volunteer-app
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: volunteer-app-ingress
  namespace: production
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - voluntariado.com
    - www.voluntariado.com
    secretName: volunteer-app-tls
  rules:
  - host: voluntariado.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: volunteer-app-service
            port:
              number: 80
  - host: www.voluntariado.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: volunteer-app-service
            port:
              number: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: volunteer-app-hpa
  namespace: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: volunteer-app
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: volunteer-app-pdb
  namespace: production
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: volunteer-app
